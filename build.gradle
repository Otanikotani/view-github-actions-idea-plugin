buildscript {
    ext.kotlin_version = "1.4.10"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
    }
}


plugins {
    id 'jacoco'
    id 'java-library'
    id 'groovy'
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'org.kordamp.gradle.markdown' version '2.0.0'

    id 'com.adarshr.test-logger' version '1.7.0'
}

apply plugin: 'kotlin'

group 'org.github.otanikotani'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation group: 'one.util', name: 'streamex', version: '0.6.8'
    implementation group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '4.0.2.Final'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10"

    testImplementation 'io.kotest:kotest-runner-junit5:4.4.3'
    testImplementation 'io.kotest:kotest-assertions-core:4.4.3'

}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.3'

    updateSinceUntilBuild = false

    plugins = ['github', 'git4idea']
}


patchPluginXml {

    dependsOn markdownToHtml

    changeNotes = {
        return new File("build/gen-html/CHANGELOG.html").text
    }
}

markdownToHtml {
    sourceDir = new File("docs")
}

testlogger {
    theme 'mocha'
    showSkipped true
}

test {
    ignoreFailures = true

    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination new File("${buildDir}/reports/jacoco/report.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += ["-Xjvm-default=enable"]
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.4"
        languageVersion = "1.4"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

publishPlugin {
    token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
}

runIde {
    jvmArgs '--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED'
}